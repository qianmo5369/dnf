{"version":3,"file":"ws.js","sources":["util/ws.js"],"sourcesContent":["// src/utils/ws.js\n\nlet socketConnected = false;\nlet isConnecting = false;\nlet currentToken = '';\nlet shouldReconnect = true;\nlet reconnectDelay = 3000;\nlet reconnectTimer = null;\nlet inited = false;\n\nconst listeners = new Map();\n\n// 注册一次监听\nfunction initSocketListeners() {\n  if (inited) return;\n  inited = true;\n  uni.onSocketOpen(() => {\n    console.log('[WS] onSocketOpen');\n    socketConnected = true;\n    isConnecting = false;\n    if (currentToken) {\n      uni.sendSocketMessage({ data: JSON.stringify({ type: 'auth', token: currentToken }) });\n    }\n    triggerEvent('open');\n  });\n  uni.onSocketMessage(res => {\n    let msg;\n    try { msg = JSON.parse(res.data); }\n    catch (e) { console.warn('[WS] 非法消息', res.data); return; }\n    const ev = msg.type;\n    if (listeners.has(ev)) {\n      listeners.get(ev).forEach(fn => { try { fn(msg); } catch {} });\n    }\n  });\n  uni.onSocketClose(res => {\n    console.warn('[WS] onSocketClose', res);\n    socketConnected = false;\n    isConnecting = false;\n    triggerEvent('close');\n    if (shouldReconnect && currentToken) {\n      console.log(`[WS] ${reconnectDelay}ms 后自动重连`);\n      if (reconnectTimer) clearTimeout(reconnectTimer);\n      reconnectTimer = setTimeout(() => {\n        reconnectTimer = null;\n        if (shouldReconnect) connect(currentToken);\n      }, reconnectDelay);\n    }\n  });\n  uni.onSocketError(err => {\n    console.error('[WS] onSocketError', err);\n    if ((socketConnected || isConnecting) && shouldReconnect && currentToken) {\n      console.log('[WS] 错误发生，关闭后重连');\n      socketConnected = false;\n      isConnecting = false;\n      try { uni.closeSocket(); } catch {}\n      if (reconnectTimer) clearTimeout(reconnectTimer);\n      reconnectTimer = setTimeout(() => {\n        reconnectTimer = null;\n        if (shouldReconnect) connect(currentToken);\n      }, reconnectDelay);\n    }\n    triggerEvent('error', err);\n  });\n}\n\nfunction triggerEvent(event, payload) {\n  if (listeners.has(event)) {\n    listeners.get(event).forEach(fn => {\n      try { fn(payload); } catch (e) { console.error(e); }\n    });\n  }\n}\n\nfunction connect(token) {\n  if (!token) {\n    console.warn('[WS] connect: token 为空');\n    return;\n  }\n  currentToken = token;\n  shouldReconnect = true;\n  initSocketListeners();\n  if (socketConnected || isConnecting) {\n    console.log('[WS] connect: 已有连接或正在连接，先关闭再重连');\n    try { uni.closeSocket(); } catch {}\n    return;\n  }\n  console.log('[WS] 发起连接');\n  isConnecting = true;\n  uni.connectSocket({ url: 'wss://wss.hanyunkeji.cn/wss' });\n}\n\nfunction send(data) {\n  if (socketConnected) {\n    uni.sendSocketMessage({ data: JSON.stringify(data),\n      fail: err => console.warn('[WS] send 失败', err)\n    });\n  } else {\n    console.warn('[WS] send: 未连接，消息未发送', data);\n  }\n}\n\nfunction close() {\n  console.log('[WS] 手动关闭，不再自动重连');\n  shouldReconnect = false;\n  if (socketConnected || isConnecting) {\n    try { uni.closeSocket(); } catch {}\n  }\n  socketConnected = false;\n  isConnecting = false;\n  if (reconnectTimer) {\n    clearTimeout(reconnectTimer);\n    reconnectTimer = null;\n  }\n}\n\nfunction on(event, cb) {\n  if (!listeners.has(event)) listeners.set(event, []);\n  listeners.get(event).push(cb);\n}\n\nfunction off(event, cb) {\n  if (listeners.has(event)) {\n    listeners.set(event, listeners.get(event).filter(fn => fn !== cb));\n  }\n}\n\nfunction isConnected() { return socketConnected; }\nfunction isConnectingFn() { return isConnecting; }\n\n// 默认导出一个对象\nexport default {\n  connect,\n  send,\n  close,\n  on,\n  off,\n  isConnected,\n  isConnecting: isConnectingFn\n};\n"],"names":["uni"],"mappings":"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"}