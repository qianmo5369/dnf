{"version":3,"file":"use-avatar.js","sources":["uni_modules/tuniaoui-vue3/components/avatar/src/composables/use-avatar.ts"],"sourcesContent":["import {\n  computed,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  onUnmounted,\n  ref,\n} from 'vue'\nimport { avatarGroupContextKey } from '../../../../tokens'\nimport { useSelectorQuery } from '../../../../hooks'\nimport {\n  debugWarn,\n  generateId,\n  isEmptyVariableInDefault,\n} from '../../../../utils'\n\nimport type { SetupContext } from 'vue'\nimport type { AvatarEmits, AvatarProps } from '../avatar'\n\nexport const useAvatar = (\n  props: AvatarProps,\n  emits: SetupContext<AvatarEmits>['emit']\n) => {\n  const instance = getCurrentInstance()\n  if (!instance) {\n    debugWarn('TnAvatarGroup', '请在 setup 中使用 useAvatarGroup')\n  }\n  const { uid } = instance!\n  const avatarGroup = inject(avatarGroupContextKey, undefined)\n\n  avatarGroup?.addItem({ uid })\n\n  const componentId = `ta-${generateId()}`\n\n  const { getSelectorNodeInfo } = useSelectorQuery(instance)\n\n  // 头像组头像数量\n  const groupAvatarCount = computed<number>(() => {\n    return isEmptyVariableInDefault(avatarGroup?.avatarItems.length, 0)\n  })\n  const avatarGroupIndex = ref<number>(-1)\n  nextTick(() => {\n    // 获取当前头像的索引\n    const avatarIndex = avatarGroup?.avatarItems.findIndex(\n      (item) => item.uid === uid\n    )\n    avatarGroupIndex.value = isEmptyVariableInDefault(avatarIndex, -1)\n\n    if (!avatarWidth.value && avatarGroupIndex.value !== -1) {\n      getAvatarWidthNodeInfo()\n    }\n  })\n\n  // 头像宽度信息\n  const avatarWidth = ref<number>(0)\n\n  // 获取头像的宽度信息\n  let initCount = 0\n  const getAvatarWidthNodeInfo = async () => {\n    try {\n      const rectInfo = await getSelectorNodeInfo(`#${componentId}`)\n\n      if (!rectInfo.width) {\n        throw new Error('获取头像宽度信息失败')\n      }\n\n      avatarWidth.value = rectInfo.width || 0\n    } catch (err) {\n      if (initCount > 10) {\n        initCount = 0\n        debugWarn('TnAvatar', `获取头像宽度信息失败：${err}`)\n        return\n      }\n      initCount++\n      setTimeout(() => {\n        getAvatarWidthNodeInfo()\n      }, 150)\n    }\n  }\n\n  const avatarClick = () => {\n    avatarGroup?.handleItemClick(uid)\n    emits('click')\n  }\n\n  onUnmounted(() => {\n    avatarGroup?.removeItem(uid)\n  })\n\n  return {\n    componentId,\n    groupAvatarCount,\n    avatarGroupIndex,\n    avatarWidth,\n    avatarClick,\n  }\n}\n"],"names":["getCurrentInstance","debugWarn","inject","avatarGroupContextKey","generateId","useSelectorQuery","computed","isEmptyVariableInDefault","ref","nextTick","onUnmounted"],"mappings":";;;;;;;;;AAmBa,MAAA,YAAY,CACvB,OACA,UACG;AACH,QAAM,WAAWA,cAAAA;AACjB,MAAI,CAAC,UAAU;AACbC,mDAAU,iBAAiB,6BAA6B;AAAA,EAC1D;AACM,QAAA,EAAE,IAAQ,IAAA;AACV,QAAA,cAAcC,cAAO,OAAAC,8DAAuB,MAAS;AAE9C,6CAAA,QAAQ,EAAE,IAAA;AAEjB,QAAA,cAAc,MAAMC,oCAAA,WAAA,CAAY;AAEtC,QAAM,EAAE,oBAAA,IAAwBC,sDAAA,iBAAiB,QAAQ;AAGnD,QAAA,mBAAmBC,cAAAA,SAAiB,MAAM;AAC9C,WAAOC,uCAAyB,yBAAA,2CAAa,YAAY,QAAQ,CAAC;AAAA,EAAA,CACnE;AACK,QAAA,mBAAmBC,cAAAA,IAAY,EAAE;AACvCC,gBAAAA,WAAS,MAAM;AAEP,UAAA,cAAc,2CAAa,YAAY;AAAA,MAC3C,CAAC,SAAS,KAAK,QAAQ;AAAA;AAER,qBAAA,QAAQF,uCAAAA,yBAAyB,aAAa,EAAE;AAEjE,QAAI,CAAC,YAAY,SAAS,iBAAiB,UAAU,IAAI;AAChC;IACzB;AAAA,EAAA,CACD;AAGK,QAAA,cAAcC,kBAAY,CAAC;AAGjC,MAAI,YAAY;AAChB,QAAM,yBAAyB,YAAY;AACrC,QAAA;AACF,YAAM,WAAW,MAAM,oBAAoB,IAAI,WAAW,EAAE;AAExD,UAAA,CAAC,SAAS,OAAO;AACb,cAAA,IAAI,MAAM,YAAY;AAAA,MAC9B;AAEY,kBAAA,QAAQ,SAAS,SAAS;AAAA,aAC/B,KAAK;AACZ,UAAI,YAAY,IAAI;AACN,oBAAA;AACFP,6CAAAA,UAAA,YAAY,cAAc,GAAG,EAAE;AACzC;AAAA,MACF;AACA;AACA,iBAAW,MAAM;AACQ;SACtB,GAAG;AAAA,IACR;AAAA,EAAA;AAGF,QAAM,cAAc,MAAM;AACxB,+CAAa,gBAAgB;AAC7B,UAAM,OAAO;AAAA,EAAA;AAGfS,gBAAAA,YAAY,MAAM;AAChB,+CAAa,WAAW;AAAA,EAAG,CAC5B;AAEM,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}