{"version":3,"file":"use-modal.js","sources":["uni_modules/tuniaoui-vue3/components/modal/src/composables/use-modal.ts"],"sourcesContent":["import { ref } from 'vue'\nimport {\n  isBoolean,\n  isEmptyVariableInDefault,\n  isPromise,\n} from '../../../../utils'\n\nimport type { ModalOptions } from '../modal'\n\nexport const useModal = () => {\n  const openModal = ref(false)\n\n  // 弹框标题\n  const title = ref<Required<ModalOptions>['title']>('')\n\n  // 弹框内容\n  const content = ref<Required<ModalOptions>['content']>('')\n\n  // 是否显示取消按钮\n  const showCancel = ref<Required<ModalOptions>['showCancel']>(false)\n\n  // 取消按钮的文字\n  const cancelText = ref<Required<ModalOptions>['cancelText']>('')\n\n  // 取消按钮的样式\n  const cancelStyle = ref<Required<ModalOptions>['cancelStyle']>({})\n\n  // 确认按钮的文字\n  const confirmText = ref<Required<ModalOptions>['confirmText']>('')\n\n  // 确认按钮的样式\n  const confirmStyle = ref<Required<ModalOptions>['confirmStyle']>({})\n\n  // 是否显示遮罩\n  const mask = ref<Required<ModalOptions>['mask']>(true)\n\n  // 是否允许点击遮罩关闭\n  const maskClosable = ref<Required<ModalOptions>['maskClosable']>(false)\n\n  // 点击取消按钮触发的回调函数\n  const cancelFunc = ref<ModalOptions['cancel']>(undefined)\n\n  // 点击确认按钮触发的回调函数\n  const confirmFunc = ref<ModalOptions['confirm']>(undefined)\n\n  // 打开弹窗\n  const showModal = (options: ModalOptions) => {\n    openModal.value = true\n\n    title.value = isEmptyVariableInDefault(options.title, '')\n    content.value = options.content\n\n    showCancel.value = isEmptyVariableInDefault(options?.showCancel, false)\n    cancelText.value = isEmptyVariableInDefault(options?.cancelText, '取 消')\n    cancelStyle.value = isEmptyVariableInDefault(options?.cancelStyle, {})\n    confirmText.value = isEmptyVariableInDefault(options?.confirmText, '确 认')\n    confirmStyle.value = isEmptyVariableInDefault(options?.confirmStyle, {})\n    mask.value = isEmptyVariableInDefault(options?.mask, true)\n    maskClosable.value = isEmptyVariableInDefault(options?.maskClosable, false)\n    cancelFunc.value = options?.cancel\n    confirmFunc.value = options?.confirm\n  }\n\n  // 关闭弹窗\n  const closeModal = () => {\n    openModal.value = false\n  }\n\n  // 点击取消按钮\n  const clickCancel = () => {\n    if (!cancelFunc.value) {\n      closeModal()\n      return\n    }\n\n    const func = cancelFunc.value()\n\n    const isPromiseOrBool = [isPromise(func), isBoolean(func)].includes(true)\n\n    if (!isPromiseOrBool) {\n      // 传递的是普通函数\n      closeModal()\n      return\n    }\n\n    if (isPromise(func)) {\n      func\n        .then((res) => {\n          if (res) closeModal()\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.warn(`[TnModal] some error occured: ${err}`)\n        })\n    } else if (func) {\n      closeModal()\n    }\n  }\n\n  // 点击确认按钮\n  const clickConfirm = () => {\n    if (!confirmFunc.value) {\n      closeModal()\n      return\n    }\n\n    const func = confirmFunc.value()\n\n    const isPromiseOrBool = [isPromise(func), isBoolean(func)].includes(true)\n\n    if (!isPromiseOrBool) {\n      // 传递的是普通函数\n      closeModal()\n      return\n    }\n\n    if (isPromise(func)) {\n      func\n        .then((res) => {\n          if (res) closeModal()\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.warn(`[TnModal] some error occured: ${err}`)\n        })\n    } else if (func) {\n      closeModal()\n    }\n  }\n\n  return {\n    openModal,\n    showModal,\n    title,\n    content,\n    showCancel,\n    cancelText,\n    cancelStyle,\n    confirmText,\n    confirmStyle,\n    mask,\n    maskClosable,\n    cancelFunc,\n    confirmFunc,\n    clickCancel,\n    clickConfirm,\n  }\n}\n"],"names":["ref","isEmptyVariableInDefault","isPromise","isBoolean","uni"],"mappings":";;;;;AASO,MAAM,WAAW,MAAM;AACtB,QAAA,YAAYA,kBAAI,KAAK;AAGrB,QAAA,QAAQA,kBAAqC,EAAE;AAG/C,QAAA,UAAUA,kBAAuC,EAAE;AAGnD,QAAA,aAAaA,kBAA0C,KAAK;AAG5D,QAAA,aAAaA,kBAA0C,EAAE;AAGzD,QAAA,cAAcA,kBAA2C,CAAA,CAAE;AAG3D,QAAA,cAAcA,kBAA2C,EAAE;AAG3D,QAAA,eAAeA,kBAA4C,CAAA,CAAE;AAG7D,QAAA,OAAOA,kBAAoC,IAAI;AAG/C,QAAA,eAAeA,kBAA4C,KAAK;AAGhE,QAAA,aAAaA,cAAAA,IAA4B,MAAS;AAGlD,QAAA,cAAcA,cAAAA,IAA6B,MAAS;AAGpD,QAAA,YAAY,CAAC,YAA0B;AAC3C,cAAU,QAAQ;AAElB,UAAM,QAAQC,uCAAA,yBAAyB,QAAQ,OAAO,EAAE;AACxD,YAAQ,QAAQ,QAAQ;AAExB,eAAW,QAAQA,uCAAA,yBAAyB,mCAAS,YAAY,KAAK;AACtE,eAAW,QAAQA,uCAAA,yBAAyB,mCAAS,YAAY,KAAK;AACtE,gBAAY,QAAQA,uCAAA,yBAAyB,mCAAS,aAAa,CAAE,CAAA;AACrE,gBAAY,QAAQA,uCAAA,yBAAyB,mCAAS,aAAa,KAAK;AACxE,iBAAa,QAAQA,uCAAA,yBAAyB,mCAAS,cAAc,CAAE,CAAA;AACvE,SAAK,QAAQA,uCAAA,yBAAyB,mCAAS,MAAM,IAAI;AACzD,iBAAa,QAAQA,uCAAA,yBAAyB,mCAAS,cAAc,KAAK;AAC1E,eAAW,QAAQ,mCAAS;AAC5B,gBAAY,QAAQ,mCAAS;AAAA,EAAA;AAI/B,QAAM,aAAa,MAAM;AACvB,cAAU,QAAQ;AAAA,EAAA;AAIpB,QAAM,cAAc,MAAM;AACpB,QAAA,CAAC,WAAW,OAAO;AACV;AACX;AAAA,IACF;AAEM,UAAA,OAAO,WAAW;AAElB,UAAA,kBAAkB,CAACC,cAAA,UAAU,IAAI,GAAGC,yDAAU,IAAI,CAAC,EAAE,SAAS,IAAI;AAExE,QAAI,CAAC,iBAAiB;AAET;AACX;AAAA,IACF;AAEI,QAAAD,cAAAA,UAAU,IAAI,GAAG;AAEhB,WAAA,KAAK,CAAC,QAAQ;AACT,YAAA;AAAgB;MAAA,CACrB,EACA,MAAM,CAAC,QAAQ;AAEdE,sBAAA,MAAa,MAAA,QAAA,iFAAA,iCAAiC,GAAG,EAAE;AAAA,MAAA,CACpD;AAAA,eACM,MAAM;AACJ;IACb;AAAA,EAAA;AAIF,QAAM,eAAe,MAAM;AACrB,QAAA,CAAC,YAAY,OAAO;AACX;AACX;AAAA,IACF;AAEM,UAAA,OAAO,YAAY;AAEnB,UAAA,kBAAkB,CAACF,cAAA,UAAU,IAAI,GAAGC,yDAAU,IAAI,CAAC,EAAE,SAAS,IAAI;AAExE,QAAI,CAAC,iBAAiB;AAET;AACX;AAAA,IACF;AAEI,QAAAD,cAAAA,UAAU,IAAI,GAAG;AAEhB,WAAA,KAAK,CAAC,QAAQ;AACT,YAAA;AAAgB;MAAA,CACrB,EACA,MAAM,CAAC,QAAQ;AAEdE,sBAAA,MAAa,MAAA,QAAA,kFAAA,iCAAiC,GAAG,EAAE;AAAA,MAAA,CACpD;AAAA,eACM,MAAM;AACJ;IACb;AAAA,EAAA;AAGK,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}