{"version":3,"file":"use-form.js","sources":["uni_modules/tuniaoui-vue3/components/form/src/composables/use-form.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { filterFields } from '../utils'\nimport { isFunction } from '../../../../utils'\n\nimport type { ValidateFieldsError } from '../../../../libs/async-validator'\nimport type { FormItemProp } from '../form-item'\nimport type { FormProps } from '../form'\nimport type {\n  FormContext,\n  FormItemContext,\n  FormValidationCallback,\n  FormValidationResult,\n} from '../types'\nimport type { Arrayable } from '../../../../utils'\n\nexport const useForm = (props: FormProps) => {\n  // formItem信息\n  const fields: FormItemContext[] = []\n\n  // 添加formItem信息\n  const addField: FormContext['addField'] = (field) => {\n    fields.push(field)\n  }\n\n  // 移除formItem信息\n  const removeField: FormContext['removeField'] = (field) => {\n    if (field.prop) {\n      fields.splice(fields.indexOf(field), 1)\n    }\n  }\n\n  // 重置formItem\n  const resetFields: FormContext['resetFields'] = (properties = []) => {\n    if (!props.model) {\n      // eslint-disable-next-line no-console\n      return console.warn('[TnForm] model参数未定义')\n    }\n    filterFields(fields, properties).forEach((field) => field.resetField())\n  }\n\n  // 清除formItem验证\n  const clearValidate: FormContext['clearValidate'] = (props = []) => {\n    filterFields(fields, props).forEach((field) => field.clearValidate())\n  }\n\n  // 是否可以进行校验\n  const isValidatable = computed(() => {\n    const hasModel = !!props.model\n    if (!hasModel) {\n      // eslint-disable-next-line no-console\n      console.warn('[TnForm] model参数未定义')\n    }\n    return hasModel\n  })\n\n  // 获取需要校验的字段\n  const obtainValidateFields = (props: Arrayable<FormItemProp>) => {\n    if (fields.length === 0) return []\n\n    const filteredFields = filterFields(fields, props)\n    if (!filteredFields.length) {\n      // eslint-disable-next-line no-console\n      console.warn('[TnForm] 未找到需要校验的字段')\n      return []\n    }\n    return filteredFields\n  }\n\n  // 校验\n  const validate = async (\n    callback?: FormValidationCallback\n  ): FormValidationResult => validateField(undefined, callback)\n\n  // 开始校验字段\n  const doValidateField = async (\n    props: Arrayable<FormItemProp>\n  ): Promise<boolean> => {\n    if (!isValidatable.value) return false\n\n    const fields = obtainValidateFields(props)\n    if (fields.length === 0) return false\n\n    let validationErrors: ValidateFieldsError = {}\n    for (const field of fields) {\n      try {\n        await field.validate('')\n      } catch (fields) {\n        validationErrors = {\n          ...validationErrors,\n          ...(fields as ValidateFieldsError),\n        }\n      }\n    }\n\n    if (Object.keys(validationErrors).length === 0) return true\n    return Promise.reject(validationErrors)\n  }\n\n  // 校验字段\n  const validateField: FormContext['validateField'] = async (\n    modelProps = [],\n    callback\n  ) => {\n    const shouldThrow = !isFunction(callback)\n    try {\n      const result = await doValidateField(modelProps)\n      // 如果结果为false则说明当前校验不通过\n      if (result === true) {\n        callback?.(true)\n      }\n      return result\n    } catch (e) {\n      if (e instanceof Error) throw e\n\n      const invalidFields = e as ValidateFieldsError\n\n      callback?.(false, invalidFields)\n      return shouldThrow && Promise.reject(invalidFields)\n    }\n  }\n\n  return {\n    addField,\n    removeField,\n    resetFields,\n    clearValidate,\n    validate,\n    validateField,\n  }\n}\n"],"names":["uni","filterFields","props","computed","fields","isFunction"],"mappings":";;;;AAea,MAAA,UAAU,CAAC,UAAqB;AAE3C,QAAM,SAA4B,CAAA;AAG5B,QAAA,WAAoC,CAAC,UAAU;AACnD,WAAO,KAAK,KAAK;AAAA,EAAA;AAIb,QAAA,cAA0C,CAAC,UAAU;AACzD,QAAI,MAAM,MAAM;AACd,aAAO,OAAO,OAAO,QAAQ,KAAK,GAAG,CAAC;AAAA,IACxC;AAAA,EAAA;AAIF,QAAM,cAA0C,CAAC,aAAa,OAAO;AAC/D,QAAA,CAAC,MAAM,OAAO;AAEhB,aAAOA,cAAa,MAAA,MAAA,QAAA,+EAAA,qBAAqB;AAAA,IAC3C;AACaC,oEAAA,QAAQ,UAAU,EAAE,QAAQ,CAAC,UAAU,MAAM,YAAY;AAAA,EAAA;AAIxE,QAAM,gBAA8C,CAACC,SAAQ,OAAO;AACrDD,oEAAA,QAAQC,MAAK,EAAE,QAAQ,CAAC,UAAU,MAAM,eAAe;AAAA,EAAA;AAIhE,QAAA,gBAAgBC,cAAAA,SAAS,MAAM;AAC7B,UAAA,WAAW,CAAC,CAAC,MAAM;AACzB,QAAI,CAAC,UAAU;AAEAH,oBAAAA,MAAA,MAAA,QAAA,+EAAA,qBAAqB;AAAA,IACpC;AACO,WAAA;AAAA,EAAA,CACR;AAGK,QAAA,uBAAuB,CAACE,WAAmC;AAC/D,QAAI,OAAO,WAAW;AAAG,aAAO;AAE1B,UAAA,iBAAiBD,mDAAAA,aAAa,QAAQC,MAAK;AAC7C,QAAA,CAAC,eAAe,QAAQ;AAEbF,oBAAAA,MAAA,MAAA,QAAA,+EAAA,qBAAqB;AAClC,aAAO;IACT;AACO,WAAA;AAAA,EAAA;AAIT,QAAM,WAAW,OACf,aACyB,cAAc,QAAW,QAAQ;AAGtD,QAAA,kBAAkB,OACtBE,WACqB;AACrB,QAAI,CAAC,cAAc;AAAc,aAAA;AAE3BE,UAAAA,UAAS,qBAAqBF,MAAK;AACzC,QAAIE,QAAO,WAAW;AAAU,aAAA;AAEhC,QAAI,mBAAwC,CAAA;AAC5C,eAAW,SAASA,SAAQ;AACtB,UAAA;AACI,cAAA,MAAM,SAAS,EAAE;AAAA,eAChBA,SAAQ;AACI,2BAAA;AAAA,UACjB,GAAG;AAAA,UACH,GAAIA;AAAAA,QAAA;AAAA,MAER;AAAA,IACF;AAEA,QAAI,OAAO,KAAK,gBAAgB,EAAE,WAAW;AAAU,aAAA;AAChD,WAAA,QAAQ,OAAO,gBAAgB;AAAA,EAAA;AAIxC,QAAM,gBAA8C,OAClD,aAAa,CAAA,GACb,aACG;AACG,UAAA,cAAc,CAACC,yBAAW,QAAQ;AACpC,QAAA;AACI,YAAA,SAAS,MAAM,gBAAgB,UAAU;AAE/C,UAAI,WAAW,MAAM;AACnB,6CAAW;AAAA,MACb;AACO,aAAA;AAAA,aACA,GAAG;AACV,UAAI,aAAa;AAAa,cAAA;AAE9B,YAAM,gBAAgB;AAEtB,2CAAW,OAAO;AACX,aAAA,eAAe,QAAQ,OAAO,aAAa;AAAA,IACpD;AAAA,EAAA;AAGK,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}