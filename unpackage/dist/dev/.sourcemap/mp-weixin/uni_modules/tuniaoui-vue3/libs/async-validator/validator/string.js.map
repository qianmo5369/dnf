{"version":3,"file":"string.js","sources":["uni_modules/tuniaoui-vue3/libs/async-validator/validator/string.ts"],"sourcesContent":["import type { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n"],"names":["isEmptyValue","rules"],"mappings":";;;AAIA,MAAM,SAA2B,CAAC,MAAM,OAAO,UAAU,QAAQ,YAAY;AAC3E,QAAM,SAAmB,CAAA;AACnB,QAAA,WACJ,KAAK,YAAa,CAAC,KAAK,YAAY,OAAO,eAAe,KAAK,KAAK;AACtE,MAAI,UAAU;AACZ,QAAIA,kDAAAA,aAAa,OAAO,QAAQ,KAAK,CAAC,KAAK,UAAU;AACnD,aAAO,SAAS;AAAA,IAClB;AACAC,kEAAM,SAAS,MAAM,OAAO,QAAQ,QAAQ,SAAS,QAAQ;AAC7D,QAAI,CAACD,kDAAA,aAAa,OAAO,QAAQ,GAAG;AAClCC,8DAAA,MAAM,KAAK,MAAM,OAAO,QAAQ,QAAQ,OAAO;AAC/CA,8DAAA,MAAM,MAAM,MAAM,OAAO,QAAQ,QAAQ,OAAO;AAChDA,8DAAA,MAAM,QAAQ,MAAM,OAAO,QAAQ,QAAQ,OAAO;AAC9C,UAAA,KAAK,eAAe,MAAM;AAC5BA,gEAAA,MAAM,WAAW,MAAM,OAAO,QAAQ,QAAQ,OAAO;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AACA,WAAS,MAAM;AACjB;;"}